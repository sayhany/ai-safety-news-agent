[tool.poetry]
name = "aisafety-newsletter"
version = "0.1.0"
description = "Autonomous agent that compiles an AI-safety newsletter"
authors = ["AI Safety Team <team@example.com>"]
readme = "README.md"
packages = [{ include = "aisafety_news" }]

[tool.poetry.dependencies]
python = "^3.11"
pydantic-settings = "^2.2"
httpx = "^0.27"
aiohttp = "^3.9"
feedparser = "^6.0"
selectolax = "^0.3"
beautifulsoup4 = "^4.12"
sentence-transformers = "^2.4"
faiss-cpu = "^1.8"
structlog = "^24.1"
orjson = "^3.10"
tiktoken = "^0.6"
aiosqlite = "^0.20"
click = "^8.1"
jinja2 = "^3.1"
pyyaml = "^6.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"
pytest-asyncio = "^0.23"
vcrpy = "^6.0"
ruff = "^0.4"
mypy = "^1.10"
coverage = "^7.5"
pytest-cov = "^4.1"

[tool.poetry.scripts]
aisafety-news = "aisafety_news.orchestrator:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "W", "B", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--cov=aisafety_news --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["aisafety_news"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
